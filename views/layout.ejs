<%

	// snippet loaders
	
	//  examples:
	//
	//	snippet('something');					
	//	snippet('something', 1001);											// id = 1001
	//	snippet('something', {id: 1001, desc: "description goes here")});  	// id = 1001, desc = "text goes here"
	//	
	//	snippets('something, something2, something3'); 						// parsed list of snippets (no args allowed)
	//	snippets('something1', 'something2', 'something3'); 				// comma separated list of snippets
	//	snippets('something1', [ 'something2', 1001 ]), 'something3';		// snippet + id, inside an array
	//	snippets('something1', [ 'something2', {id: 1001, desc: 'description goes here'} ], 'something3'); 
	//																		// snippet + args obj, inside an array
	//	TODOS: 
	//  - get fallback func working, or find better solution for default settings
	//	- create way to externally set values/defaults?  i.e. snippets.placeholdit.id = "200x200";
	//  - auto search in subfolders
	//  - override snippet subfolder if found in root
	
	/* UNFINISHED VERSION
	function get_snippet_path (filename) {
		if (filename.search('/') > 0) {
			return filename;
		} else if fs.exists('snippets/' + filename + '.ejs') {
			return 'snippets/' + filename;
		} else {
			foreach (folders as folder) {
				if fs.exists('snippets/' + folder + '.ejs') {
					return 'snippets/' + folder + '/' + filename;
				}					
			}
		}	
	}
	*/
	
	/* TEMP VERSION */
	function get_snippet_path (filename) {
		if (filename.search('/') > 0) {
			return ('snippets/' + filename);
		} else {
			// TODO: check for snippet inside folders
			return ('snippets/' + filename);
		}
	}
	
	function prep_snippet_settings (settings) {
		// if given something
		if (settings) {
			// if argument is just a value, wrap it as an object
			if ( _.isString(settings) || _.isNumber(settings) ) {
				settings = { 'id' : settings };
			}
		} else {
			settings = null;
		}		
		return settings;
	}
	
	
	function snippet(partial, filename, settings) {	
		if (filename) {
			var filepath = get_snippet_path(filename);
			settings = prep_snippet_settings(settings);
			return partial(filepath, settings);
		}
	}
		
	function snippets(partial) {
	
		// slice off partial from args
		var snips = Array.prototype.slice.call(arguments, 1);
		
		// if its a string, break it out into csv list
		if (snips.length == 1) {
			if (_.isString(snips[0])) snips = snips[0].split(", ");
		}		
		
		// append the contents together and return them
		return _.reduce(snips, function(memo, snip_ref) {
			// if snip_ref is an array, split it into filename and args
			if (_.isArray(snip_ref)) {
				filename = snip_ref[0];
				args = snip_ref[1];
			} else {
				filename = snip_ref;
				args = null;
			}			
			return memo + snippet(partial, filename, args);
		}, "");
						
	}
		
	function fallback (passed, fallback) {
		if (passed) return passed
		else return fallback; 
	}
	
%>
<!DOCTYPE html>
<html>
	<head>
		<title><%- title %></title>
		<%- snippets(partial, 'system/favicon, system/viewport, system/css, system/conditionizr, system/jquery, system/require') %>
	</head>

	<body>		
		<%- body %>	
		<%- snippets(partial, 'system/js', 'system/templates', ['system/ga', 'XXX']) %>			
	</body>
</html>